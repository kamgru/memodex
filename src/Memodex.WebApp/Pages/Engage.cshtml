@page
@model Engage

@{
    Layout = "_Layout";
}

@if (Model.CurrentFlashcard is null || Model.Input is null)
{
    <span>error</span>
}
else
{
    <div class="container mx-auto flex justify-center flex-col h-full">
        <div class="px-5 lg:w-1/2 mx-auto">
            <div class="flex text-gray-400 dark:text-slate-700">
                <h2 class="">Deck: @Model.CurrentFlashcard.DeckTitle</h2>
                <span class="ml-auto">
                    question @Model.CurrentFlashcard.CurrentStep of @Model.CurrentFlashcard.DeckItemCount
                </span>
            </div>
            <div class="dark:text-gray-800 border rounded-xl shadow-xl p-5 mt-5">
                <h3 class="py-2 text-slate-800 dark:text-slate-400">
                    @Model.CurrentFlashcard.Question
                </h3>
                <button type="button" id="reveal-btn"
                        class="text-green-600  dark:text-cyan-700 text-xs p-1 px-3 flex flex-row">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                         stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round"
                              d="M3 4.5h14.25M3 9h9.75M3 13.5h9.75m4.5-4.5v12m0 0l-3.75-3.75M17.25 21L21 17.25"/>
                    </svg>
                    reveal
                </button>

                <button class="hidden text-green-600 dark:text-cyan-700 text-xs p-1 px-3 flex flex-row" id="hide-btn"
                        type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                         stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round"
                              d="M3 4.5h14.25M3 9h9.75M3 13.5h5.25m5.25-.75L17.25 9m0 0L21 12.75M17.25 9v12"/>
                    </svg>
                    hide
                </button>
                <h3 class="hidden transition-all text-slate-800 dark:text-slate-400" id="answer">
                    @Model.CurrentFlashcard.Answer
                </h3>
            </div>
            <div class="flex flex-row justify-end">
                <form method="post" class="flex mt-10 items-center">
                    <input type="hidden" asp-for="@Model.Input.ChallengeId" value="@Model.Input.ChallengeId"/>
                    <input type="hidden" asp-for="@Model.Input.FlashcardId" value="@Model.Input.FlashcardId"/>
                    <label class="mx-3 text-slate-500 dark:text-slate-600">
                        <input type="checkbox" asp-for="@Model.Input.NeedsReview" class="form-checkbox rounded mx-2">
                        mark for review
                    </label>
                    <button type="submit" class="px-3 py-1 rounded-xl bg-blue-400 text-gray-100 inline-block">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                             stroke="currentColor" class="w-6 h-6">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                  d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/>
                        </svg>
                    </button>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.getElementById("reveal-btn").addEventListener("click", function () {
            document.getElementById("answer-container").style.display = "block";
        });
        
            let revealBtn = document.querySelector('#reveal-btn');
            let hideBtn = document.querySelector('#hide-btn');
            let answer = document.querySelector('#answer');
        
            revealBtn.addEventListener('click', (e) => {
                e.preventDefault();
                answer.classList.toggle('hidden');
                revealBtn.classList.toggle('hidden');
                hideBtn.classList.toggle('hidden')
            });
        
            hideBtn.addEventListener('click', (e) => {
                e.preventDefault();
                answer.classList.toggle('hidden');
                revealBtn.classList.toggle('hidden');
                hideBtn.classList.toggle('hidden')
            });
    </script>
}